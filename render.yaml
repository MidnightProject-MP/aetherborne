services:
  - type: web # Specifies the service type as a web service
    name: explorecraft-prologue # You can choose any name for your service on Render
    runtime: node # Specifies the Node.js runtime environment
    plan: free # Optional: specify your plan, 'free' is a good start. Other options: 'starter', 'standard', etc.

    # Command to install your project's dependencies.
    # If you use yarn, change this to "yarn install".
    # Ensure your package.json and package-lock.json (or yarn.lock) are committed.
    buildCommand: npm install

    # Command to start your Node.js Express server.
    # This should match how you start your server locally.
    # Common examples: "node server.js", "node app.js", or "npm start" if defined in your package.json scripts.
    startCommand: node server/index.js # Points to your server file in the server directory
    disk:
      name: player-data # Choose a name for your disk
      mountPath: /mnt/data # Choose a mount path inside your container
      sizeGB: 1 # Smallest size, adjust if needed

    # Enable automatic preview environments for pull requests
    previews:
      generation: automatic

    # Environment variables can be set here or in the Render dashboard.
    envVars:
      - key: NODE_ENV
        value: production
      # - key: PORT # Render sets this automatically, your Express app should listen on process.env.PORT
      #   value: 3000 # This is often overridden by Render's injected PORT
    #   - key: DATABASE_URL
    #     fromDatabase:
    #       name: yourDatabaseName # if you're using a Render database
    #       property: connectionString

    # Health Check Path (optional but recommended)
    # Render will ping this path to determine if your application is healthy.
    healthCheckPath: /health # Create a simple GET /health route in your Express app that returns a 200 OK.